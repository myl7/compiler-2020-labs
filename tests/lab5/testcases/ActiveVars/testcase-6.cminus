int x[10];
int y[10];
int v[10];
int a[10];
int b[10];
int c[10];

void spmv(int n,int xptr[], int yidx[], int vals[], int b[], int x[]){
    int i;
    int j; 
    int k;

    i = 0;
    while (i < n){
        x[i] = 0;
        i = i + 1;
    }

    i = 0;
    while (i < n){
        j = xptr[i];
        while (j < xptr[i + 1]){
            x[yidx[j]] = x[yidx[j]] + vals[j];
            j = j + 1;
        }

        j = xptr[i];
        while (j < xptr[i + 1]){
            x[yidx[j]] = x[yidx[j]] + vals[j] * (b[i] - 1);
            j = j + 1;
        }
        i = i + 1;
    }
}

int getarray(int input[])
{
    int i;

    i = 0;
    while(i < 10) {
        input[i] = i;
        i = i + 1;
    }
    return 10;
}

void main(void){
    int i;
    int n;
    int m;

    i = 0;
    n = getarray(x);
    m = getarray(y);

    getarray(v);
    getarray(a);
    
    spmv(n, x, y, v, a, b);
    spmv(n, x, y, v, b, a);
      
    output(b[0]);
    output(b[1]);
    output(b[2]);
    output(b[3]);
    output(b[4]);
    output(b[5]);
    output(b[6]);
    output(b[7]);
    output(b[8]);
    output(b[9]);
    return ;
}